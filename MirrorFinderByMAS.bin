#!/bin/bash
greenplus='\e[1;33m[++]\e[0m'
redexclaim='\e[1;31m[!!]\e[0m'
rm -f ~/filterd2.txt && rm -f ~/final.txt && rm -f ~/mirrors_speedtest && rm -f ~/mirrorsspeedtest.txt && rm -f ~/filterd.txt
echo -e "\n $greenplus Download mirrors from kali.org please be patient"
wget -q -O- https://http.kali.org/README?mirrorlist | grep -P "td" | grep -P "a href" | cut -d '"' -f 4 | sort -u | grep "/kali/" >filterd.txt
echo -e "\n find $(cat filterd.txt|wc -l) mirror"
echo -e "\n  $greenplus Testing kali mirrors round-trip-time"
mirror=$(cat ~/filterd.txt | sort -u | sed s:"https\:\/\/":"":g)
for i in $mirror; do
  current_mirror=$(echo $i | cut -d "/" -f1)
  current_file=$(echo $i | cut -d "/" -f2-10)
  avg_rtt_mirror=$(ping -c 3 $current_mirror | grep -i rtt | cut -d "=" -f2 | cut -d "/" -f2)
  if [[ $avg_rtt_mirror = "" ]]; then
    echo -e "    $redexclaim Failed to respond: $current_mirror"
  else
    echo -e "    $greenplus Testing $current_mirror rtt time: $avg_rtt_mirror"ms" "
    echo "$avg_rtt_mirror:$current_mirror" >>~/filterd2.txt
  fi
done
best_rtt=$(cat ~/filterd.txt | sed -r '/^\s*$/d' | sort -nr | tail -n1 | cut -d ":" -f1)
best_rttmirror=$(cat ~/filterd.txt | sed -r '/^\s*$/d' | sort -nr | tail -n1 | cut -d ":" -f2)

echo >~/mirrorsspeedtest.txt
echo -e "\n  $greenplus Testing Top 10  mirrors - small transfer >1MB"
for i in $(cat ~/filterd2.txt | sed -r '/^\s*$/d' | sort -n | head -n10 | cut -d ":" -f2); do
  active_mirror=$(cat ~/filterd.txt | grep "$i" | sed -r '/^\s*$/d')
  active_mirror_display=$(cat ~/filterd.txt | grep "$i" | cut -d "/" -f3 | sed -r '/^\s*$/d')
  get_download=$(curl -s "$active_mirror" --w %{speed_download} -o /dev/null)
  mb_speed=$(($get_download / 1024 / 1024))
  echo "$get_download:$active_mirror:$mb_speed" >>~/mirrorsspeedtest.txt
  echo -e "    $greenplus $active_mirror_display speed: $get_download b/sec"
done

echo >~/mirrors_speedtest
echo -e "\n  $greenplus Testing top 5 mirrors from  large transfer (10MB)"
for i in $(cat ~/filterd2.txt | sed -r '/^\s*$/d' | sort -n | head -n5 | cut -d ":" -f2); do
  active_mirror=$(cat ~/filterd.txt | grep "$i" | sed s:"README":"dists/kali-rolling/Contents-amd64.gz":g | sed -r '/^\s*$/d')
  active_mirror_display=$(cat ~/filterd.txt | grep "$i" | grep "README" | cut -d "/" -f3 | sed -r '/^\s*$/d')
  get_download=$(curl --max-time 30 -s -r 0-10485760 "$active_mirror" --w %{speed_download} -o /dev/null)
  mb_speed=$(($get_download / 1024 / 1024))
  echo "$get_download:$active_mirror:$mb_speed" >>~/mirrors_speedtest
  echo -e "    $greenplus $active_mirror_display speed: $get_download b/sec ($mb_speed MB/sec)"
done
echo $(cat ~/mirrors_speedtest | sort -n | tail -n1 | cut -d ":" -f2,3) >~/final.txt
echo "\n   $greenplus best mirros is $(<~/final.txt)"

gen_select(){
sourcefile=/etc/apt/sources.list
final_mirror=$(cat ~/final.txt)
echo -e "\n\n   Save new changes to /etc/apt/sources.list ?"
read -n1 -p "   Please type Y or N : " userinput
case $userinput in
y | Y)
  echo -e "\n\n  $greenplus Saving changes to /etc/apt/sources.list"
  cp $sourcefile ${sourcefile}_$(date +%F-%T)
  sed -E -i 's,deb (http.+),deb '"$final_mirror "' kali-rolling main contrib non-free non-free-firmware,' "$sourcefile"
  sed -E -i 's,deb-src (http.+),deb-src '"$final_mirror "' kali-rolling main contrib non-free non-free-firmware,' "$sourcefile"

  echo -e "\n  $greenplus Running apt update with mirror $final_mirror selected \n"
  apt update
  ;;
n | N) echo -e "\n\n  $redexclaim Not saving changes" ;;
*)
  echo -e "\n\n  $redexclaim Invalid key try again, Y or N keys only $redexclaim";gen_select;;
esac
}
gen_select;
rm -f ~/filterd.txt ~/filterd2.txt ~/mirrors_speedtest ~/mirrorsspeedtest.txt ~/final.txt >/dev/null

